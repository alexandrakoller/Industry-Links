// Use this template to generate a workflow configuration
// file for Flow. Save a copy and keep only what is
// required for your use case. Remove all comments.
{
  "workflowType": "Flow",

  "trigger": {
    "type": "{Manual/Scheduled}",

    // Required parameters for Scheduled trigger type
    // and certain data source types (AzureBlobStorage,
    // EventHub)
    "parameters": {
      "interval": "1",
      "frequency": "{Second/Minute/Hour/Day/Week/Month}"
    }
  },

  "dataSource": {
    "type": "{AzureBlobStorage/CustomConnector/Dataverse/EventHub}",
    "name": "GetDataFromAzureBlobStorage",

    // Parameters required by the data source.
    "parameters": {
      // Azure Blob Storage requires the storage
      // account (dataset) and container (folderId)
      // to check for data files.
      "dataset": "mystorageaccount",
      "folderId": "mycontainer",
      "maxFileCount": 100,

      // Dataverse requires the plural table name
      // (entityName) to know which table to retrieve
      // data from.
      "entityName": "contoso_transactions",
      "$select": "",      // optional: comma-separated list of column unique names to limit which columns are returned
      "$filter": "",      // optional: OData style filter expression to limit which rows are returned
      "$orderby": ""       // optional: Columns to sort by in OData orderBy style (excluding lookups)

      // Event Hubs requires the event hub name,
      // consumer group, content type and maximum
      // events count.
      "eventHubName": "myeventhub",
      "contentType": "application/json",
      "consumerGroupName": "$Default",
      "maximumEventsCount": 50
    },

    ///--- CUSTOM CONNECTORS ONLY ---///
    "isCertified": false,
    "connection": {
      "connectorId": "", // required for non-certified custom connectors only
      "apiName": "", // required for certified custom connectors only
      "operationId": ""
    }
  },

  // Optional
  "dataTransform": {
    "type": "csv_to_json",
    "name": "TransformCSVToJSON"
  },

  "dataSink": {
    "type": "{CustomConnector/Dataverse}",
    "name": "IngestIntoDataverse",

    "upsert": false, // Dataverse only

    // Parameters required by the data sink.
    // This can include parameters to a custom
    // connector data sink with an array as input.
    "parameters": {

      ///--- DATAVERSE ONLY ---///
      "plural_table_name": {
        "value": "contoso_transactions"
      },

      ///--- DATAVERSE UPSERT ONLY ---///
      // The destination table GUID column name.
      "guid_column": {
        "value": "contoso_transactionid"
      },

      // If using alternate keys, provide the table column name, the source
      // property used to match the column value, and the data type. This is
      // used to generate the lookup.
      // Example: /contoso_transactions(contoso_col1='col1value',contoso_col2=123456)
      "alternate_keys": {
        "value": [
          { "column": "contoso_col1", "property": "col1", "type": "string" },
          { "column": "contoso_col2", "property": "col2", "type": "number" }
        ]
      }
    },
    "mapping": {
      ///--- CUSTOM CONNECTORS ONLY ---///
      // Remap the input data into the format required by the API.
      // Example: Custom connector accepting a single object as input
      "body/customer_id": "@items('For_each_item')?['contoso_customerid']",
      "body/timestamp": "@items('For_each_item')?['contoso_timestamp']"

      // Example: Custom connector accepting an array of objects as input
      "customer_id": "@item()?['contoso_customerid']",
      "timestamp": "@item()?['contoso_timestamp']",

      ///--- DATAVERSE ONLY ---///
      // set record's GUID. Leave out to autogenerate GUID.
      "item/contoso_transactionid": "@item()['transaction_id']",

      // all other columns to populate
      "item/contoso_customerid": "@item()['customer_id']",
      "item/contoso_merchantname": "@item()['merchant_name']",
      "item/contoso_timestamp": "@parseDateTime(item()['timestamp'])",
      "item/contoso_amount": "@item()['amount']",
      "item/contoso_merchanttype": "@item()['merchant_type']"
    },

    ///--- CUSTOM CONNECTORS ONLY ---///
    "isCertified": false,
    "inputType": "", // custom connector parameter input type. Options: Array, Object
    "connection": {
      "connectorId": "",  // required for non-certified custom connectors only
      "apiName": "",      // required for certified custom connectors only
      "operationId": ""
    }
  }
}
