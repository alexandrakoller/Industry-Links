// Use this template to generate a workflow configuration
// file for LogicApp. Save a copy and keep only what is
// required for your use case. Remove all comments.
{
  "workflowType": "LogicApp",
  "name": "ContosoIndustryLink",

  "trigger": {
    "type": "{Manual/Scheduled}",

    // Required parameters for Scheduled trigger type
    // and certain data source types (AzureBlobStorage,
    // EventHub)
    "parameters": {
      "interval": "1",
      "frequency": "{Second/Minute/Hour/Day/Week/Month}"
    }
  },

  "dataSource": {
    "type": "{AzureBlobStorage/CustomConnector/EventHub}",

    // Parameters required by the data source.
    "parameters": {
      // Azure Blob Storage requires the storage
      // account and container to check for data files.
      "storage_account_name": {
        "value": "mystorageaccount"
      },
      "storage_container_name": {
        "value": "mycontainer"
      },

      // Optional Custom Connector parameters
      "custom_connector_parameters": {
        "value": {
          "my_param": "",
          "my_param2": ""
        }
      },

      // Event Hubs requires the event hub name,
      // consumer group, content type and maximum
      // events count.
      "event_hub_name": {
        "value": "myeventhub"
      },
      "event_hub_parameters": {
        "value": {
          "consumerGroupName": "$Default",
          "contentType": "application/json",
          "maximumEventsCount": 50
        }
      }
    },

    ///--- CUSTOM CONNECTORS ONLY ---///
    "isCertified": false,
    "properties": {
      "name": "contosoapi",
      "method": "get",
      "path": "/transactions",
      "queries": {},
      "body": {}
    }
  },

  // Optional
  "dataTransform": {
    "type": "csv_to_json"
  },

  "dataSink": {
    "type": "{CustomConnector/Dataverse}",

    "upsert": false, // Dataverse only

    "parameters": {

      ///--- DATAVERSE ONLY ---///
      "plural_table_name": {
        "value": "contoso_transactions"
      },

      ///--- DATAVERSE UPSERT ONLY ---///

      // Use one of primary key or alternate key. For more info, visit:
      // https://learn.microsoft.com/en-us/power-apps/developer/data-platform/use-alternate-key-reference-record

      // If using primary key, provide the source property used to match the record GUID.
      // Example: /contoso_transactions(00000000-0000-0000-0000-000000000000)
      "guid_property": {
        "value": "transaction_id"
      },

      // If using alternate keys, provide the table column name, the source
      // property used to match the column value, and the data type. This is
      // used to generate the lookup.
      // Example: /contoso_transactions(contoso_col1='col1value',contoso_col2=123456)
      "alternate_keys": {
        "value": [
          { "column": "contoso_col1", "property": "col1", "type": "string" },
          { "column": "contoso_col2", "property": "col2", "type": "number" }
        ]
      }
    },
    "mapping": {
      ///--- CUSTOM CONNECTORS ONLY ---///
      // Remap the input data into the format required by the API.
      // Example: Custom connector accepting a single object as input
      "body/customer_id": "@items('For_each_item')?['contoso_customerid']",
      "body/timestamp": "@items('For_each_item')?['contoso_timestamp']"

      // Example: Custom connector accepting an array of objects as input
      "customer_id": "@item()?['contoso_customerid']",
      "timestamp": "@item()?['contoso_timestamp']"

      ///--- DATAVERSE ONLY ---///
      // record's GUID, insert only. Leave out to autogenerate GUID.
      "contoso_transactionid": "@item()['transaction_id']",

      // all other columns to populate
      "contoso_amount": "@item()['amount']",
      "contoso_customerid": "@{item()['customer_id']}",
      "contoso_merchantname": "@{item()['merchant_name']}",
      "contoso_merchanttype": "@{item()['merchant_type']}",
      "contoso_timestamp": "@{parseDateTime(item()['timestamp'])}"
    },

    ///--- CUSTOM CONNECTORS ONLY ---///
    "properties": {
      "name": "contosoapi",
      "inputType": "{Array/Object}",
      "method": "post",
      "path": "/transactions",
      "queries": {}
    }
  }
}
